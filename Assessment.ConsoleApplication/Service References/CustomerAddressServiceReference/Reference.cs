//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assessment.ConsoleApplication.CustomerAddressServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerAddressServiceReference.ICustomerAddressService")]
    public interface ICustomerAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerNamesTxtFile", ReplyAction="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerNamesTxtFileRespon" +
            "se")]
        bool CreateSortedCustomerNamesTxtFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerNamesTxtFile", ReplyAction="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerNamesTxtFileRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> CreateSortedCustomerNamesTxtFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerAddressesTxtFile", ReplyAction="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerAddressesTxtFileRe" +
            "sponse")]
        bool CreateSortedCustomerAddressesTxtFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerAddressesTxtFile", ReplyAction="http://tempuri.org/ICustomerAddressService/CreateSortedCustomerAddressesTxtFileRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> CreateSortedCustomerAddressesTxtFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/GetBaseDirectory", ReplyAction="http://tempuri.org/ICustomerAddressService/GetBaseDirectoryResponse")]
        string GetBaseDirectory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerAddressService/GetBaseDirectory", ReplyAction="http://tempuri.org/ICustomerAddressService/GetBaseDirectoryResponse")]
        System.Threading.Tasks.Task<string> GetBaseDirectoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerAddressServiceChannel : Assessment.ConsoleApplication.CustomerAddressServiceReference.ICustomerAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerAddressServiceClient : System.ServiceModel.ClientBase<Assessment.ConsoleApplication.CustomerAddressServiceReference.ICustomerAddressService>, Assessment.ConsoleApplication.CustomerAddressServiceReference.ICustomerAddressService {
        
        public CustomerAddressServiceClient() {
        }
        
        public CustomerAddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerAddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerAddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerAddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateSortedCustomerNamesTxtFile() {
            return base.Channel.CreateSortedCustomerNamesTxtFile();
        }
        
        public System.Threading.Tasks.Task<bool> CreateSortedCustomerNamesTxtFileAsync() {
            return base.Channel.CreateSortedCustomerNamesTxtFileAsync();
        }
        
        public bool CreateSortedCustomerAddressesTxtFile() {
            return base.Channel.CreateSortedCustomerAddressesTxtFile();
        }
        
        public System.Threading.Tasks.Task<bool> CreateSortedCustomerAddressesTxtFileAsync() {
            return base.Channel.CreateSortedCustomerAddressesTxtFileAsync();
        }
        
        public string GetBaseDirectory() {
            return base.Channel.GetBaseDirectory();
        }
        
        public System.Threading.Tasks.Task<string> GetBaseDirectoryAsync() {
            return base.Channel.GetBaseDirectoryAsync();
        }
    }
}
